stage('Build Workloads') {

    sh '''
        openssl genrsa -3 -out enclave-key.pem 3072
        cp -f config.yaml.template config.yaml
        sed -i -E 's/Distro: "(.+)"/Distro: "'"$distro_ver"'"/g' config.yaml
    '''

    // Build Bash Workload
    sh '''
        docker build --tag $workload_ver-bash --file test/$workload_ver-bash.dockerfile .
        ./gsc build -nc --insecure-args $workload_ver-bash test/$workload_ver-bash.manifest
        ./gsc sign-image $workload_ver-bash enclave-key.pem
        ./gsc info-image gsc-$workload_ver-bash
    '''

    // Build Python Workload
    sh '''
        os_release_id=$(grep -oP '(?<=^ID=).+' /etc/os-release | tr -d '"')
        if [ "${os_release_id}" = "centos" ]
        then
            docker build --tag python --file test/python.dockerfile .
        fi
        if [ "${os_release_id}" = "ubuntu" ]
        then
            docker pull python
        fi
        ./gsc build -nc --insecure-args python test/generic.manifest
        ./gsc sign-image python enclave-key.pem
        ./gsc info-image gsc-python
    '''

    // Build Bash HelloWorld Workload
    sh '''
        cp -f test/$workload_ver-bash.dockerfile test/helloworld.dockerfile
        cp -f test/$workload_ver-bash.manifest test/helloworld.manifest
        sed -i -E \'s/CMD \\["bash"\\]/CMD ["echo", \\"\\\\"Hello World!\\\\""]/\' test/helloworld.dockerfile
        docker build --tag $workload_ver-helloworld --file test/helloworld.dockerfile .
        ./gsc build -nc --insecure-args $workload_ver-helloworld test/helloworld.manifest
        ./gsc sign-image $workload_ver-helloworld enclave-key.pem
        ./gsc info-image gsc-$workload_ver-helloworld
    '''
}
