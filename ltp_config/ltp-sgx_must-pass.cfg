# KEEP THIS FILE SORTED
# in case of trouble, use ./contrib/conf_lint.py < FILENAME

# Common problems:
# - no FUNC() - feature (typically, a syscall) not implemented
# - utimensat - tries to call utimensat() as part of setup, fails
# - tmpfs - tries to mount tmpfs
# - copy child - tries to copy a child binary (X_child) to "."
# - kernel config - tries to read kernel .config

[DEFAULT]
timeout = 45
sgx = yes

[accept4_01]
must-pass =
    1
    2

[alarm03]
timeout = 60
must-pass =
    1

[alarm06]
timeout = 16
must-pass =
    2

# test 10: EOPNOTSUPP expected on CLOCK_THREAD_CPUTIME_ID
[clock_nanosleep01]
timeout = 40
must-pass =
    1
    2
    3
    4
    5
    6
    7
    8
    9
    11
    12
    13
    14

# Subtest 4 tries to unlink a file which is not readable. See
# https://github.com/oscarlab/graphene/issues/1248.
[dup07]
must-pass =
    1
    2
    3

# Subtest 4 tries to unlink a file which is not readable. See
# https://github.com/oscarlab/graphene/issues/1248.
[dup202]
must-pass =
    1
    2
    3

# segfault: uses sigprocmask and sends signals, broken in Graphene
[epoll_pwait01]
must-pass =
    2

# BROK: Test haven't reported results
[execl01]
must-pass =
    1

# BROK: Test haven't reported results
[execlp01]
must-pass =
    1

# BROK: Test haven't reported results
[execv01]
must-pass =
    1

# BROK: Test haven't reported results
[execvp01]
must-pass =
    1

[fchown01*]
skip = yes

[fchown02*]
skip = yes

[fchown03*]
skip = yes

[fchown04*]
skip = yes

[fchown05*]
skip = yes

[fchownat01_run]
must-pass =
    1
    2
    3
    5

# 1, 2, 3, 4, 5: tries 99999, F_SETLK*, F_GETLK*, gets ENOSYS instead of EINVAL/EFAULT
[fcntl13]
must-pass =
    6

[fcntl13_64]
timeout = 40
must-pass =
    6

# 2. unlink in /tmp fails with EACCES
[fcntl28]
must-pass =
    1

[fcntl28_64]
must-pass =
    1

# 2. fdatasync() on /dev/null passes instead of failing with EINVAL
[fdatasync02]
must-pass =
    1

# TBROK: Test 0 haven't reported results
[fstat03]
must-pass = 
    1

[fstat03_64]
must-pass = 
    1

# 1. fsync() on a pipe returns EROFS, not EINVAL
# 2. fsync() on a socket returns EROFS, not EINVAL
# 5. fsync() on a fifo returns EROFS, not EINVAL
[fsync03]
timeout = 60
must-pass =
    3
    4

# opens /proc/sys/kernel/pid_max
[get_robust_list01]
must-pass = 
    1
    2
    3
    4

[getcpu01]
skip = yes

# utimensat
[getcwd04]
must-pass =
    2

# tries to open /etc/hosts
[getdtablesize01]
must-pass =
    1

# only ITIMER_REAL is supported
[getitimer01]
must-pass =
    1
    3
    5

# 3, 4. getpgid(getppid()) -> getpgid(1) fails with ESRCH
# 5, 6. getpgid(getpgid(0)) -> getpgid(1) fails with ESRCH
# 7. getpgid(1) fails with ESRCH
[getpgid01]
must-pass =
    1
    2

[getpriority*]
skip = yes

[getsockopt01]
must-pass =
    1
    2
    3
    4
    8
    9

[listen01]
must-pass =
    1
    2

# tries to set RLIMIT_FSIZE and write past file size limit
[llseek01]
must-pass =
    1

[mbind*]
skip = yes

[mincore*]
skip = yes

# first two tests use supported regular files and FIFOs, other tests use unsupported char/block
# devices
[mknod01]
must-pass =
    1
    2

[mknod06]
must-pass =
    1
    3
    4
    5
    6

# should fail when growing the stack over a guard page
[mmap18]
must-pass =
    3
    4

[mprotect01]
must-pass =
    2

[msgget02]
must-pass =
    1
    2
    3

[msgsnd05]
must-pass =
    1

# 2 sub-tests fail with MS_INVALIDATE and MS_SYNC unsupported flag
[msync03]
must-pass =
    2
    3
    4
    5

# reports TBROK due to lack of reported results (no shared memory in Graphene)
[nanosleep02]
must-pass = 
    1
    2

[nice*]
skip = yes

# Subtest 5 requires proper file permissions checks (file with 0600 is opened using another user and
# failure is expected).
[open08]
must-pass =
    1
    2
    3
    4
    6

[pipe11]
must-pass =
    1


[pwrite04]
must-pass =
    2

[pwrite04_64]
timeout = 40
must-pass =
    2


# one sub-test fails MS_SYNC unsupported msync flag
[qmm01]
must-pass =
    1
    2
    4

[readlinkat01_run]
must-pass =
    3
    4

[readv02]
must-pass =
    1

# Subtests 4 and 5 require handling MSG_OOB and MSG_ERRQUEUE flags in recv.
[recv01]
must-pass =
    1
    2
    3

# subtest 3: recvfrom(addr=-1) should return 0 (this is weird, couldn't trace this path in Linux).
# subtest 6: Requires MSG_OOB support.
# subtest 7: Requires MSG_ERRQUEUE support.
[recvfrom01]
must-pass =
    1
    2
    4
    5

# subtest 3: recvmsg01(addr=-1) should return 0 (this is weird, couldn't trace this path in Linux).
# subtest 4: Requires MSG_ERRQUEUE support.
# subtest 8: Crashes Graphene in a child process, because socket migration is totally broken. A unix
#            socket is bound in the parent and then used in the child, but because migration is
#            broken, the child uses a dangling pointer (hdl->info.sock.addr.un.dentry; actually
#            pointing to the parent's address space) and crashes in __do_accept which tries to do
#            get_dentry(sock->addr.un.dentry).
[recvmsg01]
must-pass =
    1
    2
    5
    6
    7

[sched_getaffinity01]
must-pass =
    1
    2
    3

[sched_getparam*]
skip = yes

[sched_getscheduler*]
skip = yes

[sched_rr_get_interval*]
skip = yes

[sched_setaffinity01]
must-pass = 
    1
    2
    3

[sched_setparam*]
skip = yes

[sched_setscheduler*]
skip = yes

[semctl01]
must-pass =
    2
    3

[semget02]
must-pass =
    2

[send01]
must-pass =
    1
    2
    3

[sendto01]
must-pass =
    1
    2
    3
    4
    7

[setgroups03]
must-pass =
    1


[setpgid02]
must-pass = 
    1

[setpriority*]
skip = yes

[setrlimit01]
must-pass =
    1
    3
    4

[setrlimit02]
must-pass =
    1

[setrlimit03]
must-pass =
    2

[setrlimit05]
must-pass =
    1

[setsockopt01]
must-pass =
    1
    2
    3
    5
    6
    7
    8

[setsockopt03]
must-pass =
    2

[sigaction01]
must-pass =
    4

[sigpending02]
must-pass =
    1

[socket01]
timeout = 40
must-pass =
    3
    5
    8

[socketpair01]
must-pass =
    1
    5
    6

[socketpair02]
must-pass =
    1

[sockioctl01]
timeout = 40
must-pass =
    1

# no symlink()
[statfs02_run]
must-pass =
    1
    2
    3
    4
    5

# no symlink()
[statfs02_run_64]
must-pass =
    1
    2
    3
    4
    5

# no symlink()
[statvfs02_run]
must-pass =
    1
    3
    4
    5

# Graphene doesn't emulate all sysconf parameters, so we disable the ones not currently emulated
[sysconf01]
must-pass =
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    12
    14
    15
    16
    17
    18
    19
    20
    21
    24
    25
    27
    28
    29
    30
    31
    32
    33
    34
    35
    36
    37
    38
    39
    41
    42
    44
    45
    46
    47
    48
    50
    51
    52
    53
    56

# Other subtests require personality() syscall support.
[uname04]
must-pass =
    1

# tries to open '/proc/2/stat'
[wait401]
timeout = 40
must-pass =
    2
    3